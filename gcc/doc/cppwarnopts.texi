@c Copyright (C) 1999-2017 Free Software Foundation, Inc.
@c This is part of the CPP and GCC manuals.
@c For copying conditions, see the file gcc.texi.

@c ---------------------------------------------------------------------
@c Options affecting preprocessor warnings
@c ---------------------------------------------------------------------

@c If this file is included with the flag ``cppmanual'' set, it is
@c formatted for inclusion in the CPP manual; otherwise the main GCC manual.

@item -Wcomment
@itemx -Wcomments
@opindex Wcomment
@opindex Wcomments
コメント開始シーケンス@samp {/*}が@samp {/*}コメント内に現れるか、バックスラッシュ・改行が@samp{//}コメント内に現れるたびに警告する。
この警告は@option{-Wall}によって有効になる。

@item -Wtrigraphs
@opindex Wtrigraphs
@anchor{Wtrigraphs}
プログラムの意味を変えるかもしれないトライグラフに出会うと警告する。コメント内のトライグラフは、エスケープされた改行形式になるものを除いて警告しない。

このオプションは@option{-Wall}に含まれる。たとえ@option{-Wall}が与えられなくても、トライグラフが有効にならない限りこのオプションはまだ有効である。警告なしでトライグラフの変換をさせたいが、他の@option{-Wall}警告は欲しい場合は、@samp{-trigraphs -Wall -Wno-trigraphs}を使う。

@item -Wundef
@opindex Wundef
@opindex Wno-undef
@code{#if}ディレクティブ
Warn if an undefined identifier is evaluated in an @code{#if} directive.
Such identifiers are replaced with zero.

@item -Wexpansion-to-defined
@opindex Wexpansion-to-defined
Warn whenever @samp{defined} is encountered in the expansion of a macro
(including the case where the macro is expanded by an @samp{#if} directive).
Such usage is not portable.
This warning is also enabled by @option{-Wpedantic} and @option{-Wextra}.

@item -Wunused-macros
@opindex Wunused-macros
Warn about macros defined in the main file that are unused.  A macro
is @dfn{used} if it is expanded or tested for existence at least once.
The preprocessor also warns if the macro has not been used at the
time it is redefined or undefined.

Built-in macros, macros defined on the command line, and macros
defined in include files are not warned about.

@emph{Note:} If a macro is actually used, but only used in skipped
conditional blocks, then the preprocessor reports it as unused.  To avoid the
warning in such a case, you might improve the scope of the macro's
definition by, for example, moving it into the first skipped block.
Alternatively, you could provide a dummy use with something like:

@smallexample
#if defined the_macro_causing_the_warning
#endif
@end smallexample

@item -Wno-endif-labels
@opindex Wno-endif-labels
@opindex Wendif-labels
Do not warn whenever an @code{#else} or an @code{#endif} are followed by text.
This sometimes happens in older programs with code of the form

@smallexample
#if FOO
@dots{}
#else FOO
@dots{}
#endif FOO
@end smallexample

@noindent
The second and third @code{FOO} should be in comments.
This warning is on by default.
