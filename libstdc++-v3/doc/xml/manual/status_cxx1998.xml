<section xmlns="http://docbook.org/ns/docbook" version="5.0" 
	 xml:id="status.iso.1998" xreflabel="ISO C++ 1998">
<?dbhtml filename="status_iso_cxx1998.html"?>

<info><title>C++ 1998/2003</title>
  <keywordset>
    <keyword>ISO C++</keyword>
    <keyword>1998</keyword>
  </keywordset>
</info>


<section xml:id="iso.1998.status" xreflabel="Implementation Status">
<info><title>実装ステータス</title></info>  

<para>
このステータステーブルは、ISO / IEC 14882：2003の目次に基づいている。
</para>

<para>
このページでは、特定のリリースではなく、メインラインのGCC SVNでのC++のサポートについて説明する。
</para>

<!-- Status is Yes or No, Broken/Partial-->
<!--
   Yes

   No
      <?dbhtml bgcolor="#C8B0B0" ?>
   Broken/Partial
      <?dbhtml bgcolor="#B0B0B0" ?>
-->
<table frame="all" xml:id="table.cxx98_status">
  <title>C++ 1998/2003 実装ステータス</title>

<tgroup cols="4" align="left" colsep="0" rowsep="1">
<colspec colname="c1"/>
<colspec colname="c2"/>
<colspec colname="c3"/>
<colspec colname="c4"/>
  <thead>
    <row>
      <entry>節</entry>
      <entry>描写</entry>
      <entry>ステータス</entry>
      <entry>コメント</entry>
    </row>
  </thead>

  <tbody>
    <row>
      <entry>
	<emphasis>18</emphasis>
      </entry>
      <entry namest="c2" nameend="c4" align="left">
	<emphasis>言語サポート</emphasis>
      </entry>
    </row>

    <row>
      <entry>18.1</entry>
      <entry>型</entry>
      <entry>Y</entry>
      <entry/>
    </row>
    <row>
      <entry>18.2</entry>
      <entry>実装プロパティ</entry>
      <entry>Y</entry>
      <entry/>
    </row>
    <row>
      <entry>18.2.1</entry>
      <entry>数の制限</entry>
      <entry/>
      <entry/>
    </row>
    <row>
      <entry>18.2.1.1</entry>
      <entry>クラステンプレート<code>numeric_limits</code></entry>
      <entry>Y</entry>
      <entry/>
    </row>
    <row>
      <entry>18.2.1.2</entry>
      <entry><code>numeric_limits</code> メンバ</entry>
      <entry>Y</entry>
    </row>
    <row>
      <entry>18.2.1.3</entry>
      <entry><code>float_round_style</code></entry>
      <entry>Y</entry>
    </row>
    <row>
      <entry>18.2.1.4</entry>
      <entry><code>float_denorm_style</code></entry>
      <entry>Y</entry>
    </row>
    <row>
      <entry>18.2.1.5</entry>
      <entry><code>numeric_limits</code> 特殊化</entry>
      <entry>Y</entry>
      <entry/>
    </row>
    <row>
      <entry>18.2.2</entry>
      <entry>C ライブラリ</entry>
      <entry>Y</entry>
      <entry/>
    </row>
    <row>
      <entry>18.3</entry>
      <entry>開始と終了</entry>
      <entry>Y</entry>
      <entry/>
    </row>
    <row>
      <entry>18.4</entry>
      <entry>動的メモリ管理</entry>
      <entry>Y</entry>
      <entry/>
    </row>
    <row>
      <entry>18.5</entry>
      <entry>型識別</entry>
      <entry/>
      <entry/>
    </row>
    <row>
      <entry>18.5.1</entry>
      <entry>type_infoクラス</entry>
      <entry>Y</entry>
      <entry/>
    </row>
    <row>
      <entry>18.5.2</entry>
      <entry>bad_castクラス</entry>
      <entry>Y</entry>
      <entry/>
    </row>
    <row>
      <entry>18.5.3</entry>
      <entry>bad_typeidクラス</entry>
      <entry>Y</entry>
      <entry/>
    </row>
    <row>
      <entry>18.6</entry>
      <entry>例外処理</entry>
      <entry/>
      <entry/>
    </row>
    <row>
      <entry>18.6.1</entry>
      <entry>exceptionクラス</entry>
      <entry>Y</entry>
      <entry/>
    </row>
    <row>
      <entry>18.6.2</entry>
      <entry>例外指定違反</entry>
      <entry>Y</entry>
      <entry/>
    </row>
    <row>
      <entry>18.6.3</entry>
      <entry>異常終了</entry>
      <entry>Y</entry>
      <entry/>
    </row>
    <row>
      <entry>18.6.4</entry>
      <entry><code>uncaught_exception</code></entry>
      <entry>Y</entry>
      <entry/>
    </row>
    <row>
      <entry>18.7</entry>
      <entry>他のランタイムサポート</entry>
      <entry>Y</entry>
      <entry/>
    </row>
    <row>
      <entry>
	<emphasis>19</emphasis>
      </entry>
      <entry namest="c2" nameend="c4" align="left">
	<emphasis>診断</emphasis>
      </entry>
    </row>
    <row>
      <entry>19.1</entry>
      <entry>例外クラス</entry>
      <entry>Y</entry>
      <entry/>
    </row>
    <row>
      <entry>19.2</entry>
      <entry>アサーション</entry>
      <entry>Y</entry>
      <entry/>
    </row>
    <row>
      <entry>19.3</entry>
      <entry>エラー番号</entry>
      <entry>Y</entry>
      <entry/>
    </row>
    <row>
      <entry>
	<emphasis>20</emphasis>
      </entry>
      <entry namest="c2" nameend="c4" align="left">
	<emphasis>汎用ユーティリティ</emphasis>
      </entry>
    </row>
    <row>
      <entry>20.1</entry>
      <entry>要求</entry>
      <entry>Y</entry>
      <entry/>
    </row>
   <row>
      <entry>20.2</entry>
      <entry>ユーティリティ部品</entry>
      <entry/>
      <entry/>
    </row>
    <row>
      <entry>20.2.1</entry>
      <entry>演算子</entry>
      <entry>Y</entry>
      <entry/>
    </row>
    <row>
      <entry>20.2.2</entry>
      <entry><code>pair</code></entry>
      <entry>Y</entry>
      <entry/>
    </row>
   <row>
      <entry>20.3</entry>
      <entry>関数オブジェクト</entry>
      <entry/>
      <entry/>
    </row>
    <row>
      <entry>20.3.1</entry>
      <entry>基底</entry>
      <entry>Y</entry>
      <entry/>
    </row>
    <row>
      <entry>20.3.2</entry>
      <entry>算術演算</entry>
      <entry>Y</entry>
      <entry/>
    </row>
    <row>
      <entry>20.3.3</entry>
      <entry>比較</entry>
      <entry>Y</entry>
      <entry/>
    </row>
    <row>
      <entry>20.3.4</entry>
      <entry>論理演算</entry>
      <entry>Y</entry>
      <entry/>
    </row>
    <row>
      <entry>20.3.5</entry>
      <entry>否定</entry>
      <entry>Y</entry>
      <entry/>
    </row>
    <row>
      <entry>20.3.6</entry>
      <entry>バインダ</entry>
      <entry>Y</entry>
      <entry/>
    </row>
    <row>
      <entry>20.3.7</entry>
      <entry>関数へのポインタのアダプタ</entry>
      <entry>Y</entry>
      <entry/>
    </row>
    <row>
      <entry>20.3.8</entry>
      <entry>メンバへのポインタのアダプタ</entry>
      <entry>Y</entry>
      <entry/>
    </row>
    <row>
      <entry>20.4</entry>
      <entry>メモリ</entry>
      <entry/>
      <entry/>
    </row>
    <row>
      <entry>20.4.1</entry>
      <entry>デフォルトのアロケータ</entry>
      <entry>Y</entry>
      <entry/>
    </row>
    <row>
      <entry>20.4.2</entry>
      <entry>生領域のイテレータ</entry>
      <entry>Y</entry>
      <entry/>
    </row>
    <row>
      <entry>20.4.3</entry>
      <entry>一時バッファ</entry>
      <entry>Y</entry>
      <entry/>
    </row>
    <row>
      <entry>20.4.4</entry>
      <entry>特化アルゴリズム</entry>
      <entry>Y</entry>
      <entry/>
    </row>
    <row>
      <entry>20.4.4.1</entry>
      <entry><code>uninitialized_copy</code></entry>
      <entry>Y</entry>
      <entry/>
    </row>
    <row>
      <entry>20.4.4.2</entry>
      <entry><code>uninitialized_fill</code></entry>
      <entry>Y</entry>
      <entry/>
    </row>
    <row>
      <entry>20.4.4.3</entry>
      <entry><code>uninitialized_fill_n</code></entry>
      <entry>Y</entry>
      <entry/>
    </row>
    <row>
      <entry>20.4.5</entry>
      <entry>クラステンプレート<code>auto_ptr</code></entry>
      <entry>Y</entry>
      <entry/>
    </row>
    <row>
      <entry>20.4.6</entry>
      <entry>C ライブラリ</entry>
      <entry>Y</entry>
      <entry/>
    </row>
    <row>
      <entry>
	<emphasis>21</emphasis>
      </entry>
      <entry namest="c2" nameend="c4" align="left">
	<emphasis>文字列</emphasis>
      </entry>
    </row>
    <row>
      <entry>21.1</entry>
      <entry>文字特性</entry>
      <entry/>
      <entry/>
    </row>
    <row>
      <entry>21.1.1</entry>
      <entry>文字特性の要求</entry>
      <entry>Y</entry>
      <entry/>
    </row>
    <row>
      <entry>21.1.2</entry>
      <entry>traits typedef</entry>
      <entry>Y</entry>
      <entry/>
    </row>
    <row>
      <entry>21.1.3</entry>
      <entry><code>char_traits</code>特殊化</entry>
      <entry/>
      <entry/>
    </row>
    <row>
      <entry>21.1.3.1</entry>
      <entry>構造体 <code>char_traits&lt;char&gt;</code></entry>
      <entry>Y</entry>
      <entry/>
    </row>
    <row>
      <entry>21.1.3.2</entry>
      <entry>構造体 <code>char_traits&lt;wchar_t&gt;</code></entry>
      <entry>Y</entry>
      <entry/>
    </row>
    <row>
      <entry>21.2</entry>
      <entry>文字列クラス</entry>
      <entry>Y</entry>
      <entry/>
    </row>
    <row>
      <entry>21.3</entry>
      <entry>クラステンプレート <code>basic_string</code></entry>
      <entry>Y</entry>
      <entry/>
    </row>
    <row>
      <entry>21.4</entry>
      <entry>null終端列のユーティリティ</entry>
      <entry>Y</entry>
      <entry>C ライブラリ依存</entry>
    </row>
    <row>
      <entry>
      	<emphasis>22</emphasis>
      </entry>
      <entry namest="c2" nameend="c4" align="left">
	<emphasis>地域化</emphasis>
      </entry>
    </row>
    <row>
      <entry>22.1</entry>
      <entry>ロケール</entry>
      <entry/>
      <entry/>
    </row>
    <row>
      <entry>22.1.1</entry>
      <entry>クラス <code>locale</code></entry>
      <entry>Y</entry>
      <entry/>
    </row>
    <row>
      <entry>22.1.2</entry>
      <entry><code>locale</code> globals</entry>
      <entry>Y</entry>
      <entry/>
    </row>
    <row>
      <entry>22.1.3</entry>
      <entry>変換インターフェース</entry>
      <entry/>
      <entry/>
    </row>
    <row>
      <entry>22.1.3.1</entry>
      <entry>文字分類</entry>
      <entry>Y</entry>
      <entry/>
    </row>
    <row>
      <entry>22.1.3.2</entry>
      <entry>文字変換</entry>
      <entry>Y</entry>
      <entry/>
    </row>
    <row>
      <entry>22.2</entry>
      <entry>標準ロケールカテゴリー</entry>
      <entry/>
      <entry/>
    </row>
    <row>
      <entry>22.2.1</entry>
      <entry><code>ctype</code></entry>
      <entry>Y</entry>
      <entry/>
    </row>
    <row>
      <entry>22.2.2</entry>
      <entry>数値</entry>
      <entry/>
      <entry/>
    </row>
    <row>
      <entry>22.2.2.1</entry>
      <entry><code>num_get</code></entry>
      <entry>Y</entry>
      <entry/>
    </row>
    <row>
      <entry>22.2.2.2</entry>
      <entry><code>num_put</code></entry>
      <entry>Y</entry>
      <entry/>
    </row>
    <row>
      <entry>22.2.3</entry>
      <entry><code>num_punct</code></entry>
      <entry>Y</entry>
      <entry/>
    </row>
    <row>
      <entry>22.2.4</entry>
      <entry><code>collate</code></entry>
      <entry>Y</entry>
      <entry/>
    </row>
    <row>
      <entry>22.2.5</entry>
      <entry>時間</entry>
      <entry/>
      <entry/>
    </row>
    <row>
      <entry>22.2.5.1</entry>
      <entry><code>time_get</code></entry>
      <entry>Y</entry>
      <entry/>
    </row>
    <row>
      <entry>22.2.5.2</entry>
      <entry><code>time_get_byname</code></entry>
      <entry>Y</entry>
      <entry/>
    </row>
    <row>
      <entry>22.2.5.3</entry>
      <entry><code>time_put</code></entry>
      <entry>Y</entry>
      <entry/>
    </row>
    <row>
      <entry>22.2.5.3</entry>
      <entry><code>time_put_byname</code></entry>
      <entry>Y</entry>
      <entry/>
    </row>
    <row>
      <entry>22.2.6</entry>
      <entry>金銭</entry>
      <entry/>
      <entry/>
    </row>
    <row>
      <entry>22.2.6.1</entry>
      <entry><code>money_get</code></entry>
      <entry>Y</entry>
      <entry/>
    </row>
    <row>
      <entry>22.2.6.2</entry>
      <entry><code>money_put</code></entry>
      <entry>Y</entry>
      <entry/>
    </row>
    <row>
      <entry>22.2.6.3</entry>
      <entry><code>money_punct</code></entry>
      <entry>Y</entry>
      <entry/>
    </row>
    <row>
      <entry>22.2.6.4</entry>
      <entry><code>money_punct_byname</code></entry>
      <entry>Y</entry>
      <entry/>
    </row>
    <row>
      <entry>22.2.7</entry>
      <entry><code>messages</code></entry>
      <entry>Y</entry>
      <entry/>
    </row>
    <row>
      <entry>22.2.8</entry>
      <entry>プログラム定義の面</entry>
      <entry>Y</entry>
      <entry/>
    </row>
    <row>
      <entry>22.3</entry>
      <entry>Cライブラリロケール</entry>
      <entry>Y</entry>
      <entry/>
    </row>
    <row>
      <entry>
	<emphasis>23</emphasis>
      </entry>
      <entry namest="c2" nameend="c4" align="left">
	<emphasis>コンテナ</emphasis>
      </entry>
    </row>
    <row>
      <entry>23.1</entry>
      <entry>コンテナの要求</entry>
      <entry>Y</entry>
      <entry/>
    </row>
    <row>
      <entry>23.2</entry>
      <entry>列コンテナ</entry>
      <entry/>
      <entry/>
    </row>
    <row>
      <entry>23.2.1</entry>
      <entry>クラステンプレート<code>deque</code></entry>
      <entry>Y</entry>
      <entry/>
    </row>
    <row>
      <entry>23.2.2</entry>
      <entry>クラステンプレート<code>list</code></entry>
      <entry>Y</entry>
      <entry/>
    </row>
    <row>
      <entry>23.2.3</entry>
      <entry>アダプタ</entry>
      <entry/>
      <entry/>
    </row>
    <row>
      <entry>23.2.3.1</entry>
      <entry>クラステンプレート <code>queue</code></entry>
      <entry>Y</entry>
      <entry/>
    </row>
    <row>
      <entry>23.2.3.2</entry>
      <entry>クラステンプレート <code>priority_queue</code></entry>
      <entry>Y</entry>
      <entry/>
    </row>
    <row>
      <entry>23.2.3.3</entry>
      <entry>クラステンプレート <code>stack</code></entry>
      <entry>Y</entry>
      <entry/>
    </row>
    <row>
      <entry>23.2.4</entry>
      <entry>クラステンプレート <code>vector</code></entry>
      <entry>Y</entry>
      <entry/>
    </row>
    <row>
      <entry>23.2.5</entry>
      <entry>クラス <code>vector&lt;bool&gt;</code></entry>
      <entry>Y</entry>
      <entry/>
    </row>
    <row>
      <entry>23.3</entry>
      <entry>連想コンテナ</entry>
      <entry/>
      <entry/>
    </row>
    <row>
      <entry>23.3.1</entry>
      <entry>クラステンプレート <code>map</code></entry>
      <entry>Y</entry>
      <entry/>
    </row>
    <row>
      <entry>23.3.2</entry>
      <entry>クラステンプレート<code>multimap</code></entry>
      <entry>Y</entry>
      <entry/>
    </row>
    <row>
      <entry>23.3.3</entry>
      <entry>クラステンプレート <code>set</code></entry>
      <entry>Y</entry>
      <entry/>
    </row>
    <row>
      <entry>23.3.4</entry>
      <entry>クラステンプレート <code>multiset</code></entry>
      <entry>Y</entry>
      <entry/>
    </row>
    <row>
      <entry>
	<emphasis>24</emphasis>
      </entry>
      <entry namest="c2" nameend="c4" align="left">
	<emphasis>イテレータ</emphasis>
      </entry>
    </row>
    <row>
      <entry>24.1</entry>
      <entry>要求</entry>
      <entry>Y</entry>
      <entry/>
    </row>
    <row>
      <entry>24.2</entry>
      <entry>ヘッダ <code>&lt;iterator&gt;</code> 梗概</entry>
      <entry>Y</entry>
      <entry/>
    </row>
    <row>
      <entry>24.3</entry>
      <entry>イテレータのプリミティブ</entry>
      <entry>Y</entry>
      <entry/>
    </row>
    <row>
      <entry>24.4</entry>
      <entry>事前に定義されたイテレータとイテレータアダプタ</entry>
      <entry/>
      <entry/>
    </row>
    <row>
      <entry>24.4.1</entry>
      <entry>反転イテレータ</entry>
      <entry>Y</entry>
      <entry/>
    </row>
    <row>
      <entry>24.4.2</entry>
      <entry>挿入イテレータ</entry>
      <entry>Y</entry>
      <entry/>
    </row>
    <row>
      <entry>24.5</entry>
      <entry>ストリームイテレータ</entry>
      <entry/>
      <entry/>
    </row>
    <row>
      <entry>24.5.1</entry>
      <entry>クラステンプレート <code>istream_iterator</code></entry>
      <entry>Y</entry>
      <entry/>
    </row>
    <row>
      <entry>24.5.2</entry>
      <entry>クラステンプレート <code>ostream_iterator</code></entry>
      <entry>Y</entry>
      <entry/>
    </row>
    <row>
      <entry>24.5.3</entry>
      <entry>クラステンプレート <code>istreambuf_iterator</code></entry>
      <entry>Y</entry>
      <entry/>
    </row>
    <row>
      <entry>24.5.4</entry>
      <entry>クラステンプレート <code>ostreambuf_iterator</code></entry>
      <entry>Y</entry>
      <entry/>
    </row>
    <row>
      <entry>
	<emphasis>25</emphasis>
      </entry>
      <entry namest="c2" nameend="c4" align="left">
	<emphasis>アルゴリズム</emphasis>
      </entry>
    </row>
    <row>
      <entry>25.1</entry>
      <entry>非修正列操作</entry>
      <entry>Y</entry>
      <entry/>
    </row>
    <row>
      <entry>25.2</entry>
      <entry>変更列操作</entry>
      <entry>Y</entry>
      <entry/>
    </row>
    <row>
      <entry>25.3</entry>
      <entry>並べ替えと関連の操作</entry>
      <entry>Y</entry>
      <entry/>
    </row>
    <row>
      <entry>25.4</entry>
      <entry>Cライブラリアルゴリズム</entry>
      <entry>Y</entry>
      <entry/>
    </row>
    <row>
      <entry>
      <emphasis>26</emphasis>
      </entry>
      <entry namest="c2" nameend="c4" align="left">
	<emphasis>数値</emphasis>
      </entry>
    </row>
    <row>
      <entry>26.1</entry>
      <entry>数値型の要求</entry>
      <entry>Y</entry>
      <entry/>
    </row>
    <row>
      <entry>26.2</entry>
      <entry>複素数</entry>
      <entry>Y</entry>
      <entry/>
    </row>
    <row>
      <entry>26.3</entry>
      <entry>数値配列</entry>
      <entry/>
      <entry/>
    </row>
    <row>
      <entry>26.3.1</entry>
      <entry>ヘッダ <code>&lt;valarray&gt;</code> の梗概</entry>
      <entry>Y</entry>
      <entry/>
    </row>
    <row>
      <entry>26.3.2</entry>
      <entry>クラステンプレート <code>valarray</code></entry>
      <entry>Y</entry>
      <entry/>
    </row>
    <row>
      <entry>26.3.3</entry>
      <entry><code>valarray</code>非メンバ操作</entry>
      <entry>Y</entry>
      <entry/>
    </row>
    <row>
      <entry>26.3.4</entry>
      <entry>クラス <code>slice</code></entry>
      <entry>Y</entry>
      <entry/>
    </row>
    <row>
      <entry>26.3.5</entry>
      <entry>クラステンプレート <code>slice_array</code></entry>
      <entry>Y</entry>
      <entry/>
    </row>
    <row>
      <entry>26.3.6</entry>
      <entry>クラス <code>gslice</code></entry>
      <entry>Y</entry>
      <entry/>
    </row>
    <row>
      <entry>26.3.7</entry>
      <entry>クラステンプレート <code>gslice_array</code></entry>
      <entry>Y</entry>
      <entry/>
    </row>
    <row>
      <entry>26.3.8</entry>
      <entry>クラステンプレート <code>mask_array</code></entry>
      <entry>Y</entry>
      <entry/>
    </row>
    <row>
      <entry>26.3.9</entry>
      <entry>クラステンプレート <code>indirect_array</code></entry>
      <entry>Y</entry>
      <entry/>
    </row>
    <row>
      <entry>26.4</entry>
      <entry>汎用数値操作</entry>
      <entry/>
      <entry/>
    </row>
    <row>
      <entry>26.4.1</entry>
      <entry><code>accumulate</code></entry>
      <entry>Y</entry>
      <entry/>
    </row>
    <row>
      <entry>26.4.2</entry>
      <entry><code>inner_product</code></entry>
      <entry>Y</entry>
      <entry/>
    </row>
    <row>
      <entry>26.4.3</entry>
      <entry><code>partial_sum</code></entry>
      <entry>Y</entry>
      <entry/>
    </row>
    <row>
      <entry>26.4.4</entry>
      <entry><code>adjacent_difference</code></entry>
      <entry>Y</entry>
      <entry/>
    </row>
    <row>
      <entry>26.4.5</entry>
      <entry>iota</entry>
      <entry>Y</entry>
      <entry/>
    </row>
    <row>
      <entry>26.5</entry>
      <entry>C ライブラリ</entry>
      <entry>Y</entry>
      <entry/>
    </row>
    <row>
      <entry>
	<emphasis>27</emphasis>
      </entry>
      <entry namest="c2" nameend="c4" align="left">
	<emphasis>入力/出力</emphasis>
      </entry>
    </row>
    <row>
      <entry>27.1</entry>
      <entry>要求</entry>
      <entry>Y</entry>
      <entry/>
    </row>
    <row>
      <entry>27.2</entry>
      <entry>前方宣言</entry>
      <entry>Y</entry>
      <entry/>
    </row>
    <row>
      <entry>27.3</entry>
      <entry>標準iostreamオブジェクト</entry>
      <entry>Y</entry>
      <entry/>
    </row>
    <row>
      <entry>27.3.1</entry>
      <entry>ナロー・ストリーム・オブジェクト</entry>
      <entry>Y</entry>
      <entry/>
    </row>
    <row>
      <entry>27.3.2</entry>
      <entry>ワイド・ストリーム・オブジェクト</entry>
      <entry>Y</entry>
      <entry/>
    </row>
    <row>
      <entry>27.4</entry>
      <entry>Iostreams基底クラス</entry>
      <entry>Y</entry>
      <entry/>
    </row>
    <row>
      <entry>27.5</entry>
      <entry>ストリームバッファ</entry>
      <entry>Y</entry>
      <entry/>
    </row>
    <row>
      <entry>27.6</entry>
      <entry>書式化とマニピュレータ</entry>
      <entry>Y</entry>
      <entry/>
    </row>
    <row>
      <entry>27.7</entry>
      <entry>文字列ベースのストリーム</entry>
      <entry>Y</entry>
      <entry/>
    </row>
    <row>
      <entry>27.8</entry>
      <entry>ファイルベースのストリーム</entry>
      <entry>Y</entry>
      <entry/>
    </row>
    <row>
      <entry>
      	<emphasis>付録 D</emphasis>
      </entry>
      <entry namest="c2" nameend="c4" align="left">
	<emphasis>互換機能</emphasis>
      </entry>
    </row>
    <row>
      <entry>D.1</entry>
      <entry>boolのインクリメント演算子</entry>
      <entry/>
      <entry/>
    </row>
    <row>
      <entry>D.2</entry>
      <entry><code>static</code> キーワード</entry>
      <entry/>
      <entry/>
    </row>
    <row>
      <entry>D.3</entry>
      <entry>アクセス宣言</entry>
      <entry/>
      <entry/>
    </row>
    <row>
      <entry>D.4</entry>
      <entry>const文字列からの暗黙の変換</entry>
      <entry/>
      <entry/>
    </row>
    <row>
      <entry>D.5</entry>
      <entry>C 標準ライブラリヘッダ</entry>
      <entry/>
      <entry/>
    </row>
    <row>
      <entry>D.6</entry>
      <entry>古い iostreams メンバ</entry>
      <entry/>
      <entry/>
    </row>
    <row>
      <entry>D.7</entry>
      <entry>char* ストリーム</entry>
      <entry/>
      <entry/>
    </row>

  </tbody>
</tgroup>
</table>
</section>

<section xml:id="iso.1998.specific" xreflabel="Implementation Specific"><info><title>Implementation Specific Behavior</title></info>
  

   <para>
   ISO規格は、以下のフレーズを定義している。
   </para>
   <blockquote>
     <variablelist>
     <varlistentry>
       <term>
	 <code>[1.3.5] implementation-defined behavior</code>
       </term>
       <listitem>
	 <para>
	 Behavior, for a well-formed program construct and correct data, that
	 depends on the implementation <emphasis>and that each implementation
	 shall document</emphasis>.
	 </para>
       </listitem>
     </varlistentry>
     </variablelist>
   </blockquote>
   <para>
     We do so here, for the C++ library only.  Behavior of the
     compiler, linker, runtime loader, and other elements of "the
     implementation" are documented elsewhere.  Everything listed
     in Annex B, Implementation Qualities, are also part of the
     compiler, not the library.
   </para>
   <para>
     For each entry, we give the section number of the standard, when
     applicable.  This list is probably incomplet and inkorrekt.
   </para>
   <para>
     <emphasis>[1.9]/11 #3</emphasis> If <code>isatty(3)</code> is true, then
      interactive stream support is implied.
   </para>
   <para>
     <emphasis>[17.4.4.5]</emphasis> Non-reentrant functions are probably best
      discussed in the various sections on multithreading (see above).
   </para>
   <!-- [17.4.4.8]/3 says any function that doesn't have an exception-spec
	can throw whatever we want; see also its footnote.  Let's list those
	in the sections where the function itself occurs.
   -->
   <para><emphasis>[18.1]/4</emphasis> The type of <code>NULL</code> is described
      under <link linkend="std.support.types.null">Support</link>.
   </para>
   <para><emphasis>[18.3]/8</emphasis> Even though it's listed in the library
      sections, libstdc++ has zero control over what the cleanup code hands
      back to the runtime loader.  Talk to the compiler people.  :-)
   </para>
   <para><emphasis>[18.4.2.1]/5</emphasis> (bad_alloc),
      <emphasis>[18.5.2]/5</emphasis> (bad_cast),
      <emphasis>[18.5.3]/5</emphasis> (bad_typeid),
      <emphasis>[18.6.1]/8</emphasis> (exception),
      <emphasis>[18.6.2.1]/5</emphasis> (bad_exception):  The <code>what()</code>
      member function of class <code>std::exception</code>, and these other
      classes publicly derived from it, returns the name of the
      class, e.g. <literal>"std::bad_alloc"</literal>.
   </para>
   <para><emphasis>[18.5.1]/7</emphasis> The return value of
      <code>std::type_info::name()</code> is the mangled type name.
      You will need to call <code>c++filt</code> and pass the names as
      command-line parameters to demangle them, or call a
      <link linkend="manual.ext.demangle">runtime demangler function</link>.
   </para>
   <para><emphasis>[20.1.5]/5</emphasis> <emphasis>"Implementors are encouraged to
      supply libraries that can accept allocators that encapsulate more
      general memory models and that support non-equal instances.  In such
      implementations, any requirements imposed on allocators by containers
      beyond those requirements that appear in Table 32, and the semantics
      of containers and algorithms when allocator instances compare
      non-equal, are implementation-defined."</emphasis>  There is experimental
      support for non-equal allocators in the standard containers in C++98
      mode. There are no additional requirements on allocators. It is undefined
      behaviour to swap two containers if their allocators are not equal.
   </para>
   <para><emphasis>[21.1.3.1]/3,4</emphasis>,
      <emphasis>[21.1.3.2]/2</emphasis>,
      <emphasis>[21.3]/6 basic_string::iterator, basic_string::const_iterator</emphasis>,
      <emphasis>[23.*]'s foo::iterator</emphasis>,
      <emphasis>[27.*]'s foo::*_type</emphasis>,
      <emphasis>others...</emphasis>
      Nope, these types are called implementation-defined because you
      shouldn't be taking advantage of their underlying types.  Listing them
      here would defeat the purpose.  :-)
   </para>
   <para><emphasis>[21.1.3.1]/5</emphasis> I don't really know about
      the <type>mbstate_t</type> stuff... see
      the <link linkend="std.localization.facet.codecvt"><code>codecvt</code>
      notes</link> for what does exist.
   </para>
   <para><emphasis>[22.*]</emphasis> Anything and everything we have on locale
      implementation will be described under
      <link linkend="std.localization.locales.locale">Localization</link>.
   </para>
   <para><emphasis>[23.*]</emphasis> All of the containers in this clause
     define <type>size_type</type> as <type>std::size_t</type> and
     <type>difference_type</type> as <type>std::ptrdiff_t</type>.
   </para>
   <para><emphasis>[26.2.8]/9</emphasis> I have no idea what
      <code>complex&lt;T&gt;</code>'s <code>pow(0,0)</code> returns.
   </para>
   <para><emphasis>[27.4.2.4]/2</emphasis> Calling
      <code>std::ios_base::sync_with_stdio</code> after I/O has already been
      performed on the standard stream objects will
      flush the buffers, and <!-- this line might go away -->
      destroy and recreate the underlying buffer instances.  Whether or not
      the previously-written I/O is destroyed in this process depends mostly
      on the <code>--enable-libio</code> choice:  for stdio, if the written
      data is already in the stdio buffer, the data may be completely safe!
   </para>
   <para><emphasis>[27.6.1.1.2]</emphasis>,
      <emphasis>[27.6.2.3]</emphasis> The I/O sentry ctor and dtor can perform
      additional work than the minimum required.  We are not currently taking
      advantage of this yet.
   </para>
   <para><emphasis>[27.7.1.3]/16</emphasis>,
      <emphasis>[27.8.1.4]/10</emphasis>
      The effects of <code>pubsetbuf/setbuf</code> are described in the
      <link linkend="std.io">Input and Output</link> chapter.
   </para>
   <para><emphasis>[27.8.1.4]/16</emphasis> Calling <code>fstream::sync</code> when
      a get area exists will... whatever <code>fflush()</code> does, I think.
   </para>

</section>

</section>
